// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: stormworker.proto

package stormgrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message containing operation details.
type StormworkerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation       string `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`                                     // Custom operation
	InputFileName   string `protobuf:"bytes,2,opt,name=input_file_name,json=inputFileName,proto3" json:"input_file_name,omitempty"`      // The name of the file to be processed.
	RangeStart      int32  `protobuf:"varint,3,opt,name=range_start,json=rangeStart,proto3" json:"range_start,omitempty"`                // The start of the range in the file (inclusive).
	RangeEnd        int32  `protobuf:"varint,4,opt,name=range_end,json=rangeEnd,proto3" json:"range_end,omitempty"`                      // The end of the range in the file (inclusive).
	OutputFileName  string `protobuf:"bytes,5,opt,name=output_file_name,json=outputFileName,proto3" json:"output_file_name,omitempty"`   // The name of file to write outputs to. Append ?
	NumTasks        int32  `protobuf:"varint,6,opt,name=num_tasks,json=numTasks,proto3" json:"num_tasks,omitempty"`                      // The number of tasks per stage
	AggregateOutput bool   `protobuf:"varint,7,opt,name=aggregate_output,json=aggregateOutput,proto3" json:"aggregate_output,omitempty"` // Last stage of the process - "simple" / "complex"
	Stage           int32  `protobuf:"varint,8,opt,name=stage,proto3" json:"stage,omitempty"`                                            // Phase of the task
	TaskId          int32  `protobuf:"varint,9,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`                            // Task ID
	LinesProcessed  int32  `protobuf:"varint,10,opt,name=lines_processed,json=linesProcessed,proto3" json:"lines_processed,omitempty"`   // The end of the range in the file (inclusive).
	CustomParam     string `protobuf:"bytes,11,opt,name=custom_param,json=customParam,proto3" json:"custom_param,omitempty"`             //custom
	State           string `protobuf:"bytes,12,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *StormworkerRequest) Reset() {
	*x = StormworkerRequest{}
	mi := &file_stormworker_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StormworkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StormworkerRequest) ProtoMessage() {}

func (x *StormworkerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stormworker_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StormworkerRequest.ProtoReflect.Descriptor instead.
func (*StormworkerRequest) Descriptor() ([]byte, []int) {
	return file_stormworker_proto_rawDescGZIP(), []int{0}
}

func (x *StormworkerRequest) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *StormworkerRequest) GetInputFileName() string {
	if x != nil {
		return x.InputFileName
	}
	return ""
}

func (x *StormworkerRequest) GetRangeStart() int32 {
	if x != nil {
		return x.RangeStart
	}
	return 0
}

func (x *StormworkerRequest) GetRangeEnd() int32 {
	if x != nil {
		return x.RangeEnd
	}
	return 0
}

func (x *StormworkerRequest) GetOutputFileName() string {
	if x != nil {
		return x.OutputFileName
	}
	return ""
}

func (x *StormworkerRequest) GetNumTasks() int32 {
	if x != nil {
		return x.NumTasks
	}
	return 0
}

func (x *StormworkerRequest) GetAggregateOutput() bool {
	if x != nil {
		return x.AggregateOutput
	}
	return false
}

func (x *StormworkerRequest) GetStage() int32 {
	if x != nil {
		return x.Stage
	}
	return 0
}

func (x *StormworkerRequest) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *StormworkerRequest) GetLinesProcessed() int32 {
	if x != nil {
		return x.LinesProcessed
	}
	return 0
}

func (x *StormworkerRequest) GetCustomParam() string {
	if x != nil {
		return x.CustomParam
	}
	return ""
}

func (x *StormworkerRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

// The response message containing the operation result.
type StormworkerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`   // The status of the operation (e.g., "success", "failure").
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // A detailed message about the operation result.
}

func (x *StormworkerResponse) Reset() {
	*x = StormworkerResponse{}
	mi := &file_stormworker_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StormworkerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StormworkerResponse) ProtoMessage() {}

func (x *StormworkerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stormworker_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StormworkerResponse.ProtoReflect.Descriptor instead.
func (*StormworkerResponse) Descriptor() ([]byte, []int) {
	return file_stormworker_proto_rawDescGZIP(), []int{1}
}

func (x *StormworkerResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StormworkerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_stormworker_proto protoreflect.FileDescriptor

var file_stormworker_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x74, 0x6f, 0x72, 0x6d, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x6d, 0x67, 0x72, 0x70, 0x63, 0x22, 0x9b,
	0x03, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x12, 0x29, 0x0a, 0x10, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6c, 0x69,
	0x6e, 0x65, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x47, 0x0a, 0x13,
	0x53, 0x74, 0x6f, 0x72, 0x6d, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x60, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x12, 0x51, 0x0a, 0x10, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x6d,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x6d, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2e, 0x2f, 0x73, 0x74,
	0x6f, 0x72, 0x6d, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stormworker_proto_rawDescOnce sync.Once
	file_stormworker_proto_rawDescData = file_stormworker_proto_rawDesc
)

func file_stormworker_proto_rawDescGZIP() []byte {
	file_stormworker_proto_rawDescOnce.Do(func() {
		file_stormworker_proto_rawDescData = protoimpl.X.CompressGZIP(file_stormworker_proto_rawDescData)
	})
	return file_stormworker_proto_rawDescData
}

var file_stormworker_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_stormworker_proto_goTypes = []any{
	(*StormworkerRequest)(nil),  // 0: stormgrpc.StormworkerRequest
	(*StormworkerResponse)(nil), // 1: stormgrpc.StormworkerResponse
}
var file_stormworker_proto_depIdxs = []int32{
	0, // 0: stormgrpc.StormWorker.PerformOperation:input_type -> stormgrpc.StormworkerRequest
	1, // 1: stormgrpc.StormWorker.PerformOperation:output_type -> stormgrpc.StormworkerResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_stormworker_proto_init() }
func file_stormworker_proto_init() {
	if File_stormworker_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stormworker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stormworker_proto_goTypes,
		DependencyIndexes: file_stormworker_proto_depIdxs,
		MessageInfos:      file_stormworker_proto_msgTypes,
	}.Build()
	File_stormworker_proto = out.File
	file_stormworker_proto_rawDesc = nil
	file_stormworker_proto_goTypes = nil
	file_stormworker_proto_depIdxs = nil
}
